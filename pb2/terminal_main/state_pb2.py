# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: state.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import universal.public_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='state.proto',
  package='state',
  serialized_pb='\n\x0bstate.proto\x12\x05state\x1a\x16universal/public.proto\"6\n\tstateInfo\x12\x0b\n\x03iNo\x18\x01 \x02(\x05\x12\r\n\x05sDesc\x18\x02 \x01(\x0c\x12\r\n\x05iTime\x18\x03 \x01(\x05\"7\n\x0cstateInfoAll\x12\'\n\rstateInfoList\x18\x01 \x03(\x0b\x32\x10.state.stateInfo2q\n\rterminal2main\x12/\n\x11rpcStateRepairAll\x12\x0c.public.fake\x1a\x0c.public.fake\x12/\n\rrpcStateClick\x12\x10.state.stateInfo\x1a\x0c.public.fake2\xa8\x01\n\rmain2terminal\x12.\n\x0crpcStateInfo\x12\x10.state.stateInfo\x1a\x0c.public.fake\x12\x31\n\x0frpcStateInfoDel\x12\x10.state.stateInfo\x1a\x0c.public.fake\x12\x34\n\x0frpcStateInfoAll\x12\x13.state.stateInfoAll\x1a\x0c.public.fakeB\x03\x90\x01\x01')




_STATEINFO = _descriptor.Descriptor(
  name='stateInfo',
  full_name='state.stateInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='iNo', full_name='state.stateInfo.iNo', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sDesc', full_name='state.stateInfo.sDesc', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='iTime', full_name='state.stateInfo.iTime', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=46,
  serialized_end=100,
)


_STATEINFOALL = _descriptor.Descriptor(
  name='stateInfoAll',
  full_name='state.stateInfoAll',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stateInfoList', full_name='state.stateInfoAll.stateInfoList', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=102,
  serialized_end=157,
)

_STATEINFOALL.fields_by_name['stateInfoList'].message_type = _STATEINFO
DESCRIPTOR.message_types_by_name['stateInfo'] = _STATEINFO
DESCRIPTOR.message_types_by_name['stateInfoAll'] = _STATEINFOALL

class stateInfo(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STATEINFO

  # @@protoc_insertion_point(class_scope:state.stateInfo)

class stateInfoAll(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STATEINFOALL

  # @@protoc_insertion_point(class_scope:state.stateInfoAll)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), '\220\001\001')

_TERMINAL2MAIN = _descriptor.ServiceDescriptor(
  name='terminal2main',
  full_name='state.terminal2main',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=159,
  serialized_end=272,
  methods=[
  _descriptor.MethodDescriptor(
    name='rpcStateRepairAll',
    full_name='state.terminal2main.rpcStateRepairAll',
    index=0,
    containing_service=None,
    input_type=universal.public_pb2._FAKE,
    output_type=universal.public_pb2._FAKE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpcStateClick',
    full_name='state.terminal2main.rpcStateClick',
    index=1,
    containing_service=None,
    input_type=_STATEINFO,
    output_type=universal.public_pb2._FAKE,
    options=None,
  ),
])

class terminal2main(_service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _TERMINAL2MAIN
class terminal2main_Stub(terminal2main):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _TERMINAL2MAIN


_MAIN2TERMINAL = _descriptor.ServiceDescriptor(
  name='main2terminal',
  full_name='state.main2terminal',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=275,
  serialized_end=443,
  methods=[
  _descriptor.MethodDescriptor(
    name='rpcStateInfo',
    full_name='state.main2terminal.rpcStateInfo',
    index=0,
    containing_service=None,
    input_type=_STATEINFO,
    output_type=universal.public_pb2._FAKE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpcStateInfoDel',
    full_name='state.main2terminal.rpcStateInfoDel',
    index=1,
    containing_service=None,
    input_type=_STATEINFO,
    output_type=universal.public_pb2._FAKE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='rpcStateInfoAll',
    full_name='state.main2terminal.rpcStateInfoAll',
    index=2,
    containing_service=None,
    input_type=_STATEINFOALL,
    output_type=universal.public_pb2._FAKE,
    options=None,
  ),
])

class main2terminal(_service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _MAIN2TERMINAL
class main2terminal_Stub(main2terminal):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _MAIN2TERMINAL

# @@protoc_insertion_point(module_scope)
